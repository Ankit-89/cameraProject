{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","playing","setPlaying","useEffect","deviceName","osName","console","log","className","width","height","videoConstraints","facingMode","serviceWorker","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA6CeA,MAtCf,WACE,MAA8BC,mBAAS,eAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,qBAAU,WACR,IAAIC,EAAa,GAEfA,EADa,QAAXC,SACW,SACO,YAAXA,SACI,UACO,WAAXA,SACI,MACO,eAAXA,SACI,aAEA,SAEfH,EAAWE,GACXE,QAAQC,IAAIF,YACX,IAOD,yBAAKG,UAAU,OACb,yBAAKA,UAAU,kBACf,kBAAC,IAAD,CACEC,MAAM,OACNC,OAAO,OACPC,iBAVmB,CACvBC,WAAY,WAYV,yBAAKJ,UAAU,mBAAf,aAA4CP,KC5BnCY,EAZO,SAAAC,GAChBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e07841f8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  osName\r\n} from 'react-device-detect'\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [playing, setPlaying] = useState('Pristine OS');\r\n\r\n  useEffect(() => {\r\n    let deviceName = \"\";\r\n    if (osName === \"iOS\") {\r\n      deviceName = \"iPhone\"\r\n    } else if (osName === \"Android\") {\r\n      deviceName = \"Android\"\r\n    } else if (osName === \"Mac OS\") {\r\n      deviceName = \"Mac\"\r\n    } else if (osName === \"BlackBerry\") {\r\n      deviceName = \"BlackBerry\"\r\n    } else {\r\n      deviceName = \"Window\"\r\n    }\r\n    setPlaying(deviceName);\r\n    console.log(osName)\r\n  }, [])\r\n\r\n  const videoConstraints = {\r\n    facingMode: \"user\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__container\">\r\n      <Webcam\r\n        width='100%'\r\n        height='100%'\r\n        videoConstraints={videoConstraints}\r\n      />\r\n      </div>\r\n      <div className=\"app__deviceName\"> Device - {playing}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const serviceWorker = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default serviceWorker;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker();\r\n"],"sourceRoot":""}